//
//  Configuration.swift
//  Physics Breaker
//
//  Created by Charlie Bushman on 1/23/16.
//  Copyright Â© 2016 imaginary inc. All rights reserved.
//

import Foundation
import UIKit
import SpriteKit


class Configuration {
    var physicsObject: SKSpriteNode
    var tempObj: PhysicsObject
    var nodesInRegion: [SKSpriteNode]
    var physicsNodes: [SKSpriteNode]
    
    init (physicsObj: String, rotation: CGFloat, position: CGPoint, physicsNodesX: [SKSpriteNode]){
        tempObj = PhysicsObject(objectType: physicsObj)
        physicsObject = tempObj.getPhysicsObject()
        physicsObject.name = physicsObj
        let rotateToAngle = SKAction.rotateToAngle(rotation, duration: 0.0)
        physicsObject.runAction(rotateToAngle)
        physicsObject.position = position
        nodesInRegion = [SKSpriteNode(imageNamed: "Imaginary Inc")]
        physicsNodes = physicsNodesX
        
        if(physicsObj == "Frictionless Mass"){
            configFrictionlessMass()
        }else if(physicsObj == "Angular Mass"){
            configAngularMass()
        }else if(physicsObj == "Focal Point"){
            configFocalPoint()
        }else if(physicsObj == "Flat Surface"){
            configFlatSurface()
        }else if(physicsObj == "Inclined Plane"){
            configInclinedPlane()
        }else if(physicsObj == "Drop Off"){
            configDropOff()
        }else if(physicsObj == "Rise"){
            configRise()
        }else if(physicsObj == "Wall"){
            configWall()
        }else if(physicsObj == "Force Vector"){
            configForceVector()
        }else if(physicsObj == "Weight"){
            configWeight()
        }else if(physicsObj == "Friction"){
            configFriction()
        }else if(physicsObj == "Normal Force"){
            configNormalForce()
        }else if(physicsObj == "String"){
            configString()
        }else if(physicsObj == "Glue"){
            configGlue()
        }else if(physicsObj == "Putty"){
            configPutty()
        }else if(physicsObj == "Spring"){
            configSpring()
        }else{
            
        }
    }
    
    func getPhysicsObject() ->SKSpriteNode{
        return physicsObject
    }
    
    func configFrictionlessMass(){
        let region = SKRegion(radius: 10.0)
        // Set nodesInRegion[] to hold all physics objects close to the node
        
        //INITIALIZE REGION NEAR NODE!!!
        
        var counter = 0
        for node in physicsNodes{
            /*
            ** Test if they're in region
            ** Make sure to account for different shapes and which parts should be in region
            */
            var inRegion = false
            
            if(node.name == "Flat Surface" || node.name == "Inclined Plane" || node.name == "Cliff" || node.name == "Rise" || node.name == "String" || node.name == "Spring"){
                if(node.name == "Flat Surface" || node.name == "Rise"){
                    // If physicsObject is close to node make inRegion true
                    inRegion = region.containsPoint(node.position)
                    print("Horray!")
                }else if(node.name == "Cliff"){
                    inRegion = region.containsPoint(CGPoint(x: node.position.x, y: node.position.y+5))
                }else if(node.name == "Inclined Plane" || node.name == "String" || node.name == "Spring"){
                    inRegion = region.containsPoint(CGPoint(x: node.position.x+5, y: node.position.y+5))
                }
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                nodesInRegion[counter].name = node.name
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                physicsObject.position = obj.position
                print("It's working")
            }else if obj.name == "Inclined Plane" {
                physicsObject.position = obj.position
            }else if obj.name == "Cliff" {
                physicsObject.position = obj.position
            }else if obj.name == "Rise" {
                physicsObject.position = obj.position
            }else if obj.name == "String" {
                physicsObject.position = obj.position
            }else if obj.name == "Spring" {
                physicsObject.position = obj.position
            }
        }
    }
    
    func configAngularMass(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == "Flat Surface" || node.name == "Inclined Plane" || node.name == "Cliff" || node.name == "Rise" || node.name == "String" || node.name == "Spring"){
                if(node.name == "Flat Surface" || node.name == "Rise"){
                    inRegion = region.containsPoint(node.position)
                }else if(node.name == "Cliff"){
                    inRegion = region.containsPoint(CGPoint(x: node.position.x, y: node.position.y+5))
                }else if(node.name == "Inclined Plane" || node.name == "String" || node.name == "Spring"){
                    inRegion = region.containsPoint(CGPoint(x: node.position.x+5, y: node.position.y+5))
                }
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                nodesInRegion[counter].name = node.name
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                physicsObject.position = obj.position
            }else if obj.name == "Inclined Plane" {
                physicsObject.position = obj.position
            }else if obj.name == "Cliff" {
                physicsObject.position = obj.position
            }else if obj.name == "Rise" {
                physicsObject.position = obj.position
            }else if obj.name == "String" {
                physicsObject.position = obj.position
            }else if obj.name == "Spring" {
                physicsObject.position = obj.position
            }
        }
        
    }
    
    func configFocalPoint(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
    }
    
    func configFlatSurface(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configInclinedPlane(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configDropOff(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configRise(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configWall(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configForceVector(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configWeight(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configFriction(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configNormalForce(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configString(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configGlue(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configPutty(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
    
    func configSpring(){
        let region = SKRegion(radius: 10.0)
        
        var counter = 0
        for node in physicsNodes{
            var inRegion = false
            
            if(node.name == ""){
                
            }
            
            if(inRegion){
                nodesInRegion[counter] = node
                counter += 1
            }
            
        }
        
        if(counter == 0){
            nodesInRegion[0] = SKSpriteNode(imageNamed: "Imaginary Inc")
            nodesInRegion[0].name = "Empty"
        }
        
        for obj in nodesInRegion{
            if obj.name == "Flat Surface" {
                //blah blah blah
            }
        }
        
    }
}































