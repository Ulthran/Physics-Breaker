//
//  IDKsScene.swift
//  Physics Breaker
//
//  Created by Charlie Bushman on 1/7/16.
//  Copyright Â© 2016 imaginary inc. All rights reserved.
//

import Foundation
import UIKit
import SpriteKit

class IDKsScene: SKScene{
    
    let menuButton = UIButton()
    
    let IDKLabel = SKLabelNode(text: "IDK's")
    
    let myIDKsLabel = SKLabelNode(text: "MY IDKs: ")
    
    let IDKDescription = SKLabelNode()
    
    let buyMoreButton = UIButton()
    
    override func didMoveToView(view: SKView) {
        self.backgroundColor = UIColor.whiteColor()  //sets scene's background to white
        
        setUpScene()
    }
    
    override func willMoveFromView(view:SKView){
    self.removeAllChildren()
    }
    
    override func delete(sender: AnyObject?) {
        let subviews = (self.view?.subviews)! as [UIView]
        for v in subviews {
            if let button = v as? UIButton {
                button.removeFromSuperview()
            }
        }
    }
    
    func setUpScene(){
        /*BUTTON: Button in top right that returns to main menu*/
        menuButton.setTitle("MENU", forState: UIControlState.Normal)
        menuButton.titleLabel!.font = UIFont(name: "HelveticaNeue-UltraLight", size: 20.0)
        menuButton.frame = CGRect(x: CGRectGetMidX(self.frame), y: CGRectGetMidY(self.frame), width: 100, height: 30)
        menuButton.setTitleColor(UIColor.blackColor(), forState: UIControlState.Normal)
        menuButton.addTarget(self, action: "goToMenu:", forControlEvents: UIControlEvents.TouchUpInside)
        
        self.view!.addSubview(menuButton)
        
        /*LABEL: Presents title 'IDKs'*/
        IDKLabel.fontColor = UIColor.blackColor()
        IDKLabel.fontSize = 60
        IDKLabel.position = CGPoint(x: CGRectGetMidX(self.frame), y: 550)
        
        self.addChild(IDKLabel)
        
        
        /*LABEL: Shows number of IDKs that the user currently has*/
        let dataManager = DataManagement()
        
        let stringNumIDKs: String = "My IDKs:      " + String(dataManager.getNumIDKs())
        
        myIDKsLabel.fontColor = UIColor.blackColor()
        myIDKsLabel.fontSize = 40
        myIDKsLabel.position = CGPoint(x: CGRectGetMidX(self.frame), y: 450)
        myIDKsLabel.text = stringNumIDKs
        
        self.addChild(myIDKsLabel)
        
        /*LABEL: Desribes what IDKs are*/
        IDKDescription.fontColor = UIColor.blackColor()
        IDKDescription.fontSize = 20
        IDKDescription.position = CGPoint(x: CGRectGetMidX(self.frame), y: 200)
        IDKDescription.fontName = "HelveticaNeue"
        IDKDescription.text = "IDKs or 'I Don't Know's are a feature added into Physics Breaker to help whenever you get really stuck on a problem. During the phase when the app is walking you through how to solve a problem, the app may ask for you to input an answer to make sure you are understanding the process. If you can't figure out what it is asking for, you may use an IDK to fill in the answer automatically. However, you only have so many IDKs and you might have to buy more if you run out so use them sparingly."
        
        self.addChild(IDKDescription)
        
        /*BUTTON: Sends the user to the In-App Purchases page*/
        buyMoreButton.setTitle("Buy More IDKs", forState: UIControlState.Normal)
        buyMoreButton.titleLabel!.font = UIFont(name: "HelveticaNeue-UltraLight", size: 40)
        buyMoreButton.frame = CGRect(x: CGRectGetMidX(self.frame), y: 75, width: 150, height: 50)
        buyMoreButton.setTitleColor(UIColor.blackColor(), forState: UIControlState.Normal)
        buyMoreButton.addTarget(self, action: "goToInAppPurchases:", forControlEvents: UIControlEvents.TouchUpInside)
        
        self.view!.addSubview(buyMoreButton)
        
        
    }
    
    @objc func goToMenu(sender: UIButton){
        let menuScene = MenuScene(size: self.size)
        
        self.view?.presentScene(menuScene, transition: SKTransition.crossFadeWithDuration(0.0))
        
        delete(menuButton)
    }
    
    @objc func goToInAppPurchases(sender: UIButton){
        /*Work on this later*/
    }
    
}



















